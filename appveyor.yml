
skip_commits:
  message: /^.*readme.*$/

install:
  - cinst pester -y
  - ps: Install-PackageProvider -Name NuGet -Force
  - ps: Install-Module PsScriptAnalyzer -Force
  - ps: Install-Module coveralls -Force

build: false

test_script:
  - ps: |
      #  PSscriptAnalyzer
      Write-Host 'Running PSScriptAnalyser coding standards analysis...'

      # Add-AppveyorTest -Name "PsScriptAnalyzer" -Outcome Running
      # $res = Invoke-ScriptAnalyzer -Path $pwd -Recurse -ErrorAction SilentlyContinue

      # If ($res) {
      #   $resultString = $res | Out-String
      #   Write-Warning $resultString
      #   Add-AppveyorMessage -Message "PSScriptAnalyzer output contained one or more violations.`
      #   Check the 'Tests' tab of this build for more details." -Category Error
      #   Update-AppveyorTest -Name "PsScriptAnalyzer" -Outcome Failed -ErrorMessage $ResultString

      #   Throw "Build failed due to coding standard violations"
      # }
      # Else {
      #   Update-AppveyorTest -Name "PsScriptAnalyzer" -Outcome Passed
      # }

      #  Pester
      Write-Host "Running Pester unit tests..."

      $testResultsFile = ".\TestsResults.xml"
      $res = Invoke-Pester -Path ".\Tests" -OutputFormat NUnitXml -OutputFile $testResultsFile -PassThru -CodeCoverage *.psm1
      (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\TestsResults.xml))

      If ($res.FailedCount -gt 0) {
        Throw "Build failed due to $($res.FailedCount) failing tests"
      }

      #  Coveralls
      Write-Host "Generating Coveralls code coverage report..."

      $files = Get-ChildItem * -Include *.ps1,*.psm1
      $token = 'ObxiFdeVVwlsneHqQqf5sAjdWIWiCi32X'
      $coverage = Format-Coverage -PesterResults $res -CoverallsApiToken $token
      Publish-Coverage -Coverage $coverage
